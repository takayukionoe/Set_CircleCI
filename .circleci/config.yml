version: 2.1

orbs:
  terraform: circleci/terraform@3.1.0
  terraform-tflint: hqo/terraform@1.0.3
  ansible: orbss/ansible-playbook@0.0.5
  aws-cli: circleci/aws-cli@3.1.3
  ruby: circleci/ruby@1.8.0

commands:
  install-tflint:
    description: "Install TFLint"
    steps:
      - run:
          command: wget -P /tmp https://github.com/terraform-linters/tflint/releases/download/v0.38.1/tflint_linux_amd64.zip && unzip /tmp/tflint_linux_amd64.zip -d /usr/local/bin

jobs:
  check_by_tflint:
    executor: terraform/default
    steps:
      - checkout
      - install-tflint
      - run:
          name: tflint
          command: |
            cd terraform/dev && terraform init
            tflint --init && tflint
  setup-by-ansible:
    executor: ansible/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - e8:25:05:90:24:a7:d9:15:36:0c:d5:d6:36:ee:9b:74
      - ansible/install:
          version: 2.10.3
      - ansible/playbook:
          playbook: ansible/playbook.yml
          playbook-options: "-u ec2-user -i ansible/inventory --private-key ~/.ssh/raisetech4thv2.pem"
  # serverspec:
  #   executor: ruby/default
  #   steps:
  #     - checkout
  #     - run:
  #         name: set
  #         command: |
  #           gem install bundler
  #           gem install serverspec
  #           gem install rake
  #           echo ${KEY_FINGERPRINT} > ~/.ssh/serverspec.pem
  #           mv lecture12/spec/config ~/.ssh/
  #           cd lecture12
  #           rake spec
workflows:
  deploy_infrastructure:
    jobs:
      - terraform/fmt:
          checkout: true
          context: terraform
          path: terraform/dev
      - terraform/validate:
          checkout: true
          context: terraform
          path: terraform/dev
          requires:
            - terraform/fmt
      - check_by_tflint:
          requires:
            - terraform/validate
      - terraform/plan:
          checkout: true
          context: terraform
          path: terraform/dev
          persist-workspace: true
          requires:
            - check_by_tflint
      - terraform/apply:
          attach-workspace: true
          context: terraform
          path: terraform/dev
          filters:
            branches:
              only: main
          requires:
            - terraform/plan
      - setup-by-ansible:
          requires:
            - terraform/apply
      # - serverspec:
      #     requires:
      #       - setup-by-ansible


# version: 2.1

# orbs:
#   ansible-playbook: orbss/ansible-playbook@0.0.5
#   aws-cli: circleci/aws-cli@3.1.5
#   ruby: circleci/ruby@1.2.0

# jobs:
#   deploy-cloudformation-stacks:
#     executor: aws-cli/default
#     steps:
#       - checkout
#       - aws-cli/setup:
#           aws-access-key-id: AWS_ACCESS_KEY_ID
#           aws-secret-access-key: AWS_SECRET_ACCESS_KEY
#           aws-region: AWS_DEFAULT_REGION
#       - run:
#           name: Deploy All CloudFormation Stacks
#           command: |
#             aws cloudformation deploy --template-file cloudformation/VPC.yml --stack-name VPC-subnet-01 
#             aws cloudformation deploy --template-file cloudformation/SecurityGroup.yml --stack-name Security-01 
#             aws cloudformation deploy --template-file cloudformation/EC2.yml --stack-name EC2-01
#             aws cloudformation deploy --template-file cloudformation/ALB.yml --stack-name ALB-01
#             aws cloudformation deploy --template-file cloudformation/RDS.yml --stack-name RDS-01

#   run-ansible-playbook:
#     executor: ansible-playbook/default
#     steps:
#       - checkout
#       - add_ssh_keys:
#           fingerprints:
#             - 60:37:52:e2:ae:57:cd:d2:d7:ff:99:20:23:63:b0:83
#       - ansible-playbook/install:
#           version: '2.10.7'
#       - ansible-playbook/playbook:
#           playbook: ansible/playbook.yml
#           playbook-options: '-u ec2-user -i ansible/inventory --private-key ~/.ssh/raisetech4thv2.pem'

#   run-serverspec:
#     executor: ruby/default
#     steps:
#       - checkout
#       - ruby/install-deps
#       - run:
#           name: Install Serverspec and run tests
#           command: |
#             gem install serverspec
#             rake --rakefile=serverspec/Rakefile spec

# workflows:
#   version: 2
#   deploy_and_test:
#     jobs:
#       - deploy-cloudformation-stacks
#       - run-ansible-playbook:
#           requires:
#             - deploy-cloudformation-stacks
#       - run-serverspec:
#           requires:
#             - run-ansible-playbook
