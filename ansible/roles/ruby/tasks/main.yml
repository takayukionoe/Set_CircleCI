---
- name: Install rbenv dependencies
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - git
    - gcc
    - openssl-devel
    - readline-devel
    - zlib-devel

- name: Install rbenv
  become: yes
  git:
    repo: "https://github.com/rbenv/rbenv.git"
    dest: "/usr/local/rbenv"
    update: no
  register: rbenv_install

- name: Add rbenv to PATH and initialize it
  lineinfile:
    dest: "~/.bash_profile"
    line: "{{ item }}"
  with_items:
    - 'export PATH="$HOME/.rbenv/bin:$PATH"'
    - 'eval "$(rbenv init -)"'
  when: rbenv_install.changed

- name: Reload .bash_profile
  become: yes
  command: ". ~/.bash_profile"
  when: rbenv_install.changed

- name: Check rbenv version
  shell: "rbenv --version"

# - name: Install rbenv and dependencies
#   ansible.builtin.shell: curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash
#   args:
#     executable: /bin/bash

# - name: Add rbenv to PATH and initialize it
#   ansible.builtin.lineinfile:
#     path: /home/ec2-user/.bash_profile
#     line: '{{ item }}'
#   with_items:
#     - 'export PATH="$HOME/.rbenv/bin:$PATH"'
#     - 'eval "$(rbenv init -)"'

# - name: Reload .bash_profile
#   ansible.builtin.shell: source /home/ec2-user/.bash_profile
#   args:
#     executable: /bin/bash

# - name: Check rbenv version
#   ansible.builtin.command: rbenv --version

- name: Install Ruby 3.1.2
  ansible.builtin.command: rbenv install 3.1.2
  args:
    creates: /home/ec2-user/.rbenv/versions/3.1.2

- name: Set Ruby 3.1.2 as the global version
  ansible.builtin.command: rbenv global 3.1.2

- name: Run rbenv rehash
  ansible.builtin.command: rbenv rehash

- name: Check Ruby version
  ansible.builtin.command: ruby --version
